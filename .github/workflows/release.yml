name: Release

on:
    push:
        tags:
            - "v*.*.*"

permissions:
    contents: write

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install Linux dependencies
              if: matrix.os == 'ubuntu-latest'
              run: sudo apt-get update && sudo apt-get install -y libasound2-dev

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
                  components: rustfmt

            - name: Build
              run: cargo build --release

            - name: Prepare Windows binary
              if: matrix.os == 'windows-latest'
              run: |
                  choco install go-msi -y
                  mkdir application
                  mv target/release/terminal_timer.exe application/terminal_timer_windows.exe
                  copy wix.json application\wix.json

            - name: Build Windows Installer MSI from exe file
              if: matrix.os == 'windows-latest'
              uses: AliceOh/CreateWindowsInstaller@1.0.0
              with:
                  exefile: "application/terminal_timer_windows.exe"

            - name: Rename macOS binary
              if: matrix.os == 'macos-latest'
              run: mv target/release/terminal_timer target/release/terminal_timer_macos

            - name: Rename Linux binary
              if: matrix.os == 'ubuntu-latest'
              run: mv target/release/terminal_timer target/release/terminal_timer_linux

            - name: Create Release
              id: create_release
              run: |
                  echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"
                  echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"

            - name: Upload Release Assets
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.create_release.outputs.tag }}
                  files: |
                      ${{ matrix.os == 'windows-latest' && 'application/terminal_timer_windows.exe\napplication/terminal_timer_windows.msi' || '' }}
                      ${{ matrix.os == 'macos-latest' && 'target/release/terminal_timer_macos' || '' }}
                      ${{ matrix.os == 'ubuntu-latest' && 'target/release/terminal_timer_linux' || '' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
